############
#
# Parallel Job 
#
############

universe = parallel
executable = sslMain.py


#SRC_HOST=mickey.buaa.edu.cn
SRC_HOST=JSI-iDPL01
#DST_HOST=komatsu.chtc.wisc.edu
DST_HOST=JSI-iDPL02
#log_path=/home/phil/placement/placement2.log
log_path=/tmp/testbykun/test.txt
port=8888
syn_log=/tmp/testbykun/test1.txt
#syn_log=/home/idpl/remoteLogs/komatsu/k2b.log

### Crondor Settings
# A promise that jobs will not run more often than this (in seconds)
# Required for the the job to run multiple times successfully.
#LEASE=1500

# A run is allowed to take this long (in seconds) to set up; otherwise
# that run is skipped
#cron_window=60

# Try to run jobs on this schedule
#cron_minute=40,45
#cron_hour=11,23
#
# Keep running the job
#on_exit_remove=false

# Arguments are:
# 1. Sending host
# 2. File to send (on the sending host)
# 3. Receiving host
# 4. Location to write file (on the receiving host)
#arguments = $(SRC_HOST) $(SRC_PATH) $(DST_HOST) $(DST_PATH) $(LEASE)
arguments= -l $(log_path) -p $(port) -s $(syn_log)

## Enable Chirp
+WantIOProxy = true

input   = /dev/null
output = ./out/sslMain.out.$(Node)
error  = ./err/sslMain.err.$(Node)
log    = ./log/sslMain.log
getenv = true

#+SrcPath = "$(SRC_PATH)"
#+DstHost = "$(DST_HOST)"
#+DstPath = "$(DST_PATH)"

+ParallelShutdownPolicy = "WAIT_FOR_ALL"

transfer_input_files = TimedExec.py,IDPLException.py,CondorTools.py,sslMover.py

should_transfer_files = YES
when_to_transfer_output = ON_EXIT
                                                  
machine_count = 1
requirements = (Machine == "$(SRC_HOST)")
queue

machine_count = 1
requirements = (Machine == "$(DST_HOST)")
queue
